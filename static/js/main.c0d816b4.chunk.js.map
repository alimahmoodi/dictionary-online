{"version":3,"sources":["components/findedVocabs/findedVocabs.module.css","components/toolbar/toolbar.module.css","components/MeanAndSentence/Box.module.css","containers/Form/Form.module.css","components/UI/Input/textAreaWithDelete/textAreaWithDelete.module.css","svg/close-black.svg","components/UI/Label/InputLabel.module.css","components/UI/Input/textarea/textarea.module.css","components/UI/Input/textInput/textInput.module.css","containers/search/search.module.css","containers/auth/register/register.module.css","containers/formBuilder/formBuilder.module.css","components/MeanAndSentence/Meaning/Meaning.module.css","components/MeanAndSentence/Sentence/Sentence.module.css","svg/close.svg","components/UI/Input/selectInput/selectInput.module.css","svg/bin.svg","containers/auth/login.module.css","components/UI/spinner/spinner.module.css","svg/tick1.svg","hoc/Auxiliary/Auxiliary.js","components/toolbar/toolbar.js","components/Layout/Layout.js","components/UI/Label/InputLabel.js","components/MeanAndSentence/Meaning/Meaning.js","components/MeanAndSentence/Sentence/Sentence.js","components/UI/Input/selectInput/selectInput.js","components/UI/Input/textarea/textarea.js","components/UI/Input/textAreaWithDelete/textAreaWithDelete.js","components/MeanAndSentence/Box.js","components/UI/spinner/spinner.js","components/UI/Input/textInput/textInput.js","containers/Form/Form.js","containers/formBuilder/formBuilder.js","components/findedVocabs/findedVocabs.js","containers/search/search.js","store/actionCreators.js","store/actionTypes.js","containers/auth/register/register.js","containers/auth/signup.js","containers/auth/logout.js","containers/auth/login.js","App.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","Toolbar","navigation","isAuth","className","classes","NavigationItems","exact","to","NavLink","activeClassName","active","Layout","this","Component","connect","state","token","InputLabel","labelClass","Label","additionClass","push","Align","join","Meaning","React","Sentence","selectInput","onChange","e","onChangeTypeOfVocab","Select","value","partOfSpeech","TextArea","textAreaClass","definitionIsValid","definitionIsTouched","definitionOverAllSend","Invalid","onChangeOfDefinitionValue","boxId","definitionValue","placeholder","textAreaWithDelete","textAreaWithDeleteClass","isValid","isTouched","exampleOverAllSend","TextAreaDiv","onClick","deleteExample","exampleId","Bin","src","alt","onChangeOfExapleValue","valueOfExample","Box","exampleSentence","examples","map","item","id","key","expValue","overAllValid","selectWrapper","AddSentenceButton","addSentence","isLast","Icon","color","style","fontSize","green","addBox","Circle","CloseHolder","numOfBoxes","Close","deleteBox","Spinner","loader","textInput","inputTextClass","InputText","wordIsTouched","wordIsValid","wordOverAllSend","ref","inputValueRef","type","typeOfInput","name","onChangeOfTextInput","textInputValue","autoComplete","Form","word","results","definition","definitionsOverAllSend","loading","error","formOverAllSend","successfulSent","deleteBoxHandler","BoxId","copyOfResults","splice","resultsLength","length","totalValidation","overallValidityCheck","setState","addBoxHandler","forEach","overAllSend","addExampleHandler","preventDefault","copyOfBox","copyOfExamples","deleteExampleHandler","typeOfVocabHandler","target","valueOfExampleHandler","editedExample","trim","valueOfDefinitionHandler","vocabHandler","wordValidation","valid","sendDataHandler","completeData","userId","data","axios","post","then","catch","err","response","message","setTimeout","boxes","labelType","errorMessage","EmptyMessage","succfSnt","backgroundColor","padding","width","margin","borderRadius","InputContainer","ButtonDiv","Button","FormBuilder","ACTION","reducer","action","vocabDefinitions","notFound","enterSomeThing","payload","errorMeesage","FindedVocabs","useReducer","dispatch","useEffect","result","loadingStatus","Object","keys","searchResponse","Touched","filled","def","YellowLine","WordType","Definition","Example","Wrapper","MainVocab","NotFound","useState","searchValue","setSearchValue","setResponse","setLoading","inputTouched","setInputTouched","setError","useRef","timer","current","query","Axios","get","res","clearTimeout","InputWrapper","inputType","inputChangeHandler","SpinnerWrapper","authFailLogin","authFailSignup","errorSignup","authSuccess","idToken","logOut","localStorage","removeItem","checkAuthTimeOut","expiresIn","auth","email","password","url","authData","returnSecureToken","expireDate","Date","getTime","setItem","localId","requestType","path","Register","Back","LogInHolder","onAuth","emailValue","passwordValue","onCloseError","setEmailValue","passValue1","setPassValue1","passValue2","setPassValue2","pass1Touched","setPass1Touched","pass2Touched","setPass2Touched","setIsValid","passShort","checkPassShort","authRedirect","AuthContainer","Header","onSubmit","Input","textTransform","fontWeight","marginTop","Tick","tick","SubmitButton","CreateAccount","ErrorMessage","crossClose","cross","Logout","logout","errorLogin","redirectPath","redirect","setPasswordValue","withRouter","checkAuth","getItem","expireTime","route","component","SignUp","Login","Search","initialState","composeEnahncer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0d816b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"findedVocabs_Wrapper__vWL2W\",\"YellowLine\":\"findedVocabs_YellowLine__1q5GL\",\"Definition\":\"findedVocabs_Definition__2Vnum\",\"WordType\":\"findedVocabs_WordType__tVmM9\",\"MainVocab\":\"findedVocabs_MainVocab__Pbbi3\",\"Example\":\"findedVocabs_Example__1jMIa\",\"ResultBox\":\"findedVocabs_ResultBox__1CRWq\",\"NotFound\":\"findedVocabs_NotFound__2k1qS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"toolbar_Toolbar__30Cek\",\"NavigationItems\":\"toolbar_NavigationItems__2iTFP\",\"NavLink\":\"toolbar_NavLink__27bdt\",\"active\":\"toolbar_active__cV6hh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"Box_Box__2fg23\",\"Close\":\"Box_Close__23-LX\",\"CloseHolder\":\"Box_CloseHolder__3r74C\",\"AddSentenceButton\":\"Box_AddSentenceButton__2yEY6\",\"addCircle\":\"Box_addCircle__QF97E\",\"Circle\":\"Box_Circle__1vA_-\",\"selectWrapper\":\"Box_selectWrapper__2vtld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Form_Button__3mjAi\",\"ButtonDiv\":\"Form_ButtonDiv__1zAXP\",\"InputContainer\":\"Form_InputContainer__xVjb-\",\"EmptyMessage\":\"Form_EmptyMessage__3Yl01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextArea\":\"textAreaWithDelete_TextArea__1p1v8\",\"Invalid\":\"textAreaWithDelete_Invalid__JLOQo\",\"Bin\":\"textAreaWithDelete_Bin__3GUlM\",\"Tick\":\"textAreaWithDelete_Tick__1yfj2\",\"TextAreaDiv\":\"textAreaWithDelete_TextAreaDiv__3-vjL\"};","module.exports = __webpack_public_path__ + \"static/media/close-black.e5ef3774.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"InputLabel_Label__3Y10Y\",\"Align\":\"InputLabel_Align__2XAb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextArea\":\"textarea_TextArea__13WkJ\",\"Invalid\":\"textarea_Invalid__1i61a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputText\":\"textInput_InputText__2j9gL\",\"Invalid\":\"textInput_Invalid__2em8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputWrapper\":\"search_InputWrapper__MUM4H\",\"SpinnerWrapper\":\"search_SpinnerWrapper__jTOfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Back\":\"register_Back__TmfkT\",\"LogInHolder\":\"register_LogInHolder__105u8\",\"RightSide\":\"register_RightSide__3jtci\",\"SubmitButton\":\"register_SubmitButton__3gAEj\",\"Header\":\"register_Header__2KSBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormBuilder\":\"formBuilder_FormBuilder__3xAiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Meaning\":\"Meaning_Meaning__CMP87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sentence\":\"Sentence_Sentence__1lFqs\"};","module.exports = __webpack_public_path__ + \"static/media/close.441d8611.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"selectInput_Select__2K7Ay\"};","module.exports = __webpack_public_path__ + \"static/media/bin.2e2cad19.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthContainer\":\"login_AuthContainer__29iDn\",\"SubmitButton\":\"login_SubmitButton__1ZXmx\",\"Header\":\"login_Header__XbYoi\",\"CreateAccount\":\"login_CreateAccount__2Ws7y\",\"ErrorMessage\":\"login_ErrorMessage__YAd7v\",\"Tick\":\"login_Tick__1Ovn1\",\"Input\":\"login_Input__2ErvF\",\"crossClose\":\"login_crossClose__2FbyO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"spinner_loader__1PgmV\",\"load3\":\"spinner_load3__1I1Kz\"};","module.exports = __webpack_public_path__ + \"static/media/tick1.8b4d6e74.svg\";","const aux = props => props.children;\r\n\r\nexport default aux;\r\n","import React from \"react\";\r\nimport classes from \"./toolbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Toolbar = (props) => {\r\n    let navigation = null;\r\n    if (props.isAuth) {\r\n        navigation = (\r\n            <div className={classes.Toolbar}>\r\n                <nav>\r\n                    <ul className={classes.NavigationItems}>\r\n                        <li>\r\n                            <NavLink\r\n                                exact\r\n                                to=\"/EnterByMe\"\r\n                                className={classes.NavLink}\r\n                                activeClassName={classes.active}\r\n                            >\r\n                                Enter By Me\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <NavLink\r\n                                exact\r\n                                to=\"/search\"\r\n                                className={classes.NavLink}\r\n                                activeClassName={classes.active}\r\n                            >\r\n                                Search\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink\r\n                                exact\r\n                                to=\"/logout\"\r\n                                className={classes.NavLink}\r\n                                activeClassName={classes.active}\r\n                            >\r\n                                LogOut\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n    return navigation;\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport Toolbar from \"../toolbar/toolbar\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <div>\r\n                    <Toolbar isAuth={this.props.isAuth} />\r\n                </div>\r\n                <main>{this.props.children}</main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.token !== null,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from \"react\";\r\nimport classes from \"./InputLabel.module.css\";\r\n\r\nconst InputLabel = props => {\r\n    const labelClass = [classes.Label];\r\n    if (props.additionClass) {\r\n        labelClass.push(classes.Align);\r\n    }\r\n    return <label className={labelClass.join(\" \")}>{props.children}</label>;\r\n};\r\nexport default InputLabel;\r\n","import React from \"react\";\r\nimport classes from \"./Meaning.module.css\";\r\nimport Label from \"../../UI/Label/InputLabel\";\r\nclass Meaning extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.Meaning}>\r\n                <Label>word definition</Label>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Meaning;\r\n","import React from \"react\";\r\nimport classes from \"./Sentence.module.css\";\r\nimport Label from \"../../UI/Label/InputLabel\";\r\n\r\nclass Sentence extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.Sentence}>\r\n                <Label>Sample Sentence</Label>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Sentence;\r\n","import React from \"react\";\r\nimport classes from \"./selectInput.module.css\";\r\nconst selectInput = props => {\r\n    return (\r\n        <select\r\n            onChange={e => props.onChangeTypeOfVocab(e)}\r\n            className={classes.Select}\r\n            value={props.partOfSpeech}\r\n        >\r\n            <option value=\"verb\">verb</option>\r\n            <option value=\"noun\">noun</option>\r\n            <option value=\"adjective\">adjective</option>\r\n            <option value=\"adverb\">adverb</option>\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default selectInput;\r\n","import React from \"react\";\r\nimport classes from \"./textarea.module.css\";\r\nconst TextArea = props => {\r\n    let textAreaClass = [classes.TextArea];\r\n    if (\r\n        (props.definitionIsValid === false && props.definitionIsTouched === true) ||\r\n        (props.definitionOverAllSend === true && props.definitionIsValid === false)\r\n    ) {\r\n        textAreaClass.push(classes.Invalid);\r\n    }\r\n    return (\r\n        <textarea\r\n            onChange={e => props.onChangeOfDefinitionValue(e, props.boxId)}\r\n            value={props.definitionValue}\r\n            className={textAreaClass.join(\" \")}\r\n            placeholder=\"Vocab Definition\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default TextArea;\r\n","import React from \"react\";\r\nimport classes from \"./textAreaWithDelete.module.css\";\r\nimport Bin from \"../../../../svg/bin.svg\";\r\n\r\nconst textAreaWithDelete = props => {\r\n    let textAreaWithDeleteClass = [classes.TextArea];\r\n    if (\r\n        (props.isValid === false && props.isTouched) ||\r\n        (props.exampleOverAllSend === true && props.isValid === false)\r\n    ) {\r\n        textAreaWithDeleteClass.push(classes.Invalid);\r\n    }\r\n    return (\r\n        <div className={classes.TextAreaDiv}>\r\n            <img\r\n                onClick={() => props.deleteExample(props.exampleId)}\r\n                className={classes.Bin}\r\n                src={Bin}\r\n                alt=\"recyclebin\"\r\n            />\r\n\r\n            <textarea\r\n                className={textAreaWithDeleteClass.join(\" \")}\r\n                onChange={e => props.onChangeOfExapleValue(e, props.exampleId)}\r\n                value={props.valueOfExample}\r\n                placeholder=\"Example\"\r\n            ></textarea>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default textAreaWithDelete;\r\n","import React from \"react\";\r\nimport classes from \"./Box.module.css\";\r\nimport Meaning from \"./Meaning/Meaning\";\r\nimport Sentence from \"./Sentence/Sentence\";\r\nimport Close from \"../../svg/close.svg\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport InputLabel from \"../UI/Label/InputLabel\";\r\n\r\nimport SelectInput from \"../UI/Input/selectInput/selectInput\";\r\nimport TextArea from \"../UI/Input/textarea/textarea\";\r\nimport TextAreaWithDelete from \"../UI/Input/textAreaWithDelete/textAreaWithDelete\";\r\n\r\nclass Box extends React.Component {\r\n    render() {\r\n        let exampleSentence = this.props.examples.map((item, id) => {\r\n            return (\r\n                <TextAreaWithDelete\r\n                    key={id}\r\n                    deleteExample={this.props.deleteExample}\r\n                    exampleId={id}\r\n                    onChangeOfExapleValue={this.props.onChangeOfExapleValue}\r\n                    valueOfExample={item.expValue}\r\n                    isValid={item.isValid}\r\n                    isTouched={item.isTouched}\r\n                    exampleOverAllSend={item.exampleOverAllSend}\r\n                    overAllValid={this.props.overAllValid}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className={classes.Box}>\r\n                <div className={classes.selectWrapper}>\r\n                    <InputLabel>Select Type Of Word</InputLabel>\r\n                    <SelectInput\r\n                        onChangeTypeOfVocab={e =>\r\n                            this.props.onChangeTypeOfVocab(e, this.props.boxId)\r\n                        }\r\n                        boxId={this.props.boxId}\r\n                        partOfSpeech={this.props.partOfSpeech}\r\n                    />\r\n                </div>\r\n                <Meaning>\r\n                    <TextArea\r\n                        onChangeOfDefinitionValue={this.props.onChangeOfDefinitionValue}\r\n                        definitionValue={this.props.definitionValue}\r\n                        definitionIsTouched={this.props.definitionIsTouched}\r\n                        definitionIsValid={this.props.definitionIsValid}\r\n                        boxId={this.props.boxId}\r\n                        overAllValid={this.props.overAllValid}\r\n                        definitionOverAllSend={this.props.definitionOverAllSend}\r\n                    />\r\n                </Meaning>\r\n                <Sentence>\r\n                    {exampleSentence}\r\n                    <button\r\n                        className={classes.AddSentenceButton}\r\n                        onClick={e => this.props.addSentence(e, this.props.boxId)}\r\n                    >\r\n                        Add Example Sentence\r\n                    </button>\r\n                </Sentence>\r\n                {this.props.isLast && (\r\n                    <Icon\r\n                        color=\"secondary\"\r\n                        style={{ fontSize: 40, color: green[500] }}\r\n                        onClick={this.props.addBox}\r\n                        className={classes.Circle}\r\n                    >\r\n                        add_circle\r\n                    </Icon>\r\n                )}\r\n\r\n                <div className={classes.CloseHolder}>\r\n                    {this.props.numOfBoxes > 1 && (\r\n                        <img\r\n                            src={Close}\r\n                            className={classes.Close}\r\n                            alt=\"recycleBin\"\r\n                            onClick={e => this.props.deleteBox(e, this.props.boxId)}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Box;\r\n","import React from \"react\";\r\nimport classes from \"./spinner.module.css\";\r\nconst Spinner = props => {\r\n    return <div className={classes.loader}></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport classes from \"./textInput.module.css\";\r\nconst textInput = (props) => {\r\n    let inputTextClass = [classes.InputText];\r\n    if (\r\n        (props.wordIsTouched === true && props.wordIsValid === false) ||\r\n        (props.wordOverAllSend === true && props.wordIsValid === false)\r\n    ) {\r\n        inputTextClass.push(classes.Invalid);\r\n    }\r\n\r\n    return (\r\n        <input\r\n            ref={props.inputValueRef}\r\n            className={inputTextClass.join(\" \")}\r\n            type={props.typeOfInput}\r\n            name=\"vocab\"\r\n            placeholder={props.placeholder}\r\n            onChange={(e) => props.onChangeOfTextInput(e)}\r\n            value={props.textInputValue}\r\n            autoComplete=\"off\"\r\n        ></input>\r\n    );\r\n};\r\n\r\nexport default textInput;\r\n","import React from \"react\";\r\nimport Box from \"../../components/MeanAndSentence/Box\";\r\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport classes from \"./Form.module.css\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../../components/UI/spinner/spinner\";\r\nimport TextInput from \"../../components/UI/Input/textInput/textInput\";\r\nimport Label from \"../../components/UI/Label/InputLabel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Form extends React.Component {\r\n    state = {\r\n        word: \"\",\r\n        results: [\r\n            {\r\n                definition: \"\",\r\n                partOfSpeech: \"noun\",\r\n                examples: [],\r\n                isLast: true,\r\n                definitionIsValid: false,\r\n                definitionIsTouched: false,\r\n                definitionsOverAllSend: false,\r\n            },\r\n        ],\r\n        loading: false,\r\n        error: null,\r\n        wordIsValid: false,\r\n        wordIsTouched: false,\r\n        overAllValid: false,\r\n        wordOverAllSend: false,\r\n        formOverAllSend: false,\r\n        successfulSent: false,\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.successfulSent === true) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    successfulSent: false,\r\n                });\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.successfulSent === true) {\r\n            this.setState({\r\n                successfulSent: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteBoxHandler = (e, BoxId) => {\r\n        let copyOfResults = [...this.state.results];\r\n        copyOfResults.splice(BoxId, 1);\r\n        const resultsLength = copyOfResults.length;\r\n        if (resultsLength > 0 && copyOfResults[resultsLength - 1].isLast === false) {\r\n            copyOfResults[resultsLength - 1].isLast = true;\r\n        }\r\n        const totalValidation = this.overallValidityCheck(copyOfResults);\r\n        this.setState({\r\n            results: copyOfResults,\r\n            overAllValid: totalValidation,\r\n        });\r\n    };\r\n\r\n    addBoxHandler = () => {\r\n        let copyOfResults = [...this.state.results];\r\n        copyOfResults.forEach((item) => {\r\n            item.isLast = false;\r\n        });\r\n        let newBox = {\r\n            definition: \"\",\r\n            partOfSpeech: \"noun\",\r\n            examples: [],\r\n            isLast: true,\r\n            definitionIsValid: false,\r\n            definitionIsTouched: false,\r\n            overAllSend: false,\r\n        };\r\n        copyOfResults.push(newBox);\r\n        const totalValidation = this.overallValidityCheck(copyOfResults);\r\n        this.setState({\r\n            results: copyOfResults,\r\n            overAllValid: totalValidation,\r\n        });\r\n    };\r\n\r\n    addExampleHandler = (e, boxId) => {\r\n        e.preventDefault();\r\n        let copyOfResults = [...this.state.results];\r\n        let copyOfBox = { ...copyOfResults[boxId] };\r\n        let copyOfExamples = [...copyOfBox.examples];\r\n        copyOfExamples.push({\r\n            expValue: \"\",\r\n            isValid: false,\r\n            isTouched: false,\r\n            exampleOverAllSend: false,\r\n        });\r\n        copyOfResults[boxId].examples = copyOfExamples;\r\n        const totalValidation = this.overallValidityCheck(copyOfResults);\r\n        this.setState({\r\n            results: copyOfResults,\r\n            overAllValid: totalValidation,\r\n        });\r\n    };\r\n\r\n    deleteExampleHandler = (exampleId, boxId) => {\r\n        let copyOfResults = [...this.state.results];\r\n        let copyOfBox = { ...copyOfResults[boxId] };\r\n        let copyOfExamples = [...copyOfBox.examples];\r\n        copyOfExamples.splice(exampleId, 1);\r\n        copyOfResults[boxId].examples = copyOfExamples;\r\n        const totalValidation = this.overallValidityCheck(copyOfResults);\r\n        this.setState({\r\n            results: copyOfResults,\r\n            overAllValid: totalValidation,\r\n        });\r\n    };\r\n\r\n    typeOfVocabHandler = (e, boxId) => {\r\n        let copyOfResults = [...this.state.results];\r\n        let copyOfBox = { ...copyOfResults[boxId] };\r\n        copyOfBox.partOfSpeech = e.target.value;\r\n        copyOfResults[boxId] = copyOfBox;\r\n        this.setState({\r\n            results: copyOfResults,\r\n        });\r\n    };\r\n\r\n    valueOfExampleHandler = (e, exampleId, boxId) => {\r\n        let copyOfResults = [...this.state.results];\r\n        let copyOfBox = { ...copyOfResults[boxId] };\r\n        let copyOfExamples = [...copyOfBox.examples];\r\n        let editedExample = { ...copyOfExamples[exampleId] };\r\n        editedExample.expValue = e.target.value;\r\n        editedExample.isTouched = true;\r\n\r\n        editedExample.isValid = editedExample.expValue.trim() === \"\" ? false : true;\r\n        copyOfResults[boxId].examples[exampleId] = editedExample;\r\n\r\n        const totalValidation = this.overallValidityCheck(copyOfResults);\r\n\r\n        this.setState({\r\n            results: copyOfResults,\r\n            overAllValid: totalValidation,\r\n        });\r\n    };\r\n\r\n    valueOfDefinitionHandler = (e, boxId) => {\r\n        let copyOfResults = [...this.state.results];\r\n        let copyOfBox = { ...copyOfResults[boxId] };\r\n        copyOfBox.definition = e.target.value;\r\n        copyOfBox.definitionIsTouched = true;\r\n\r\n        copyOfBox.definitionIsValid = copyOfBox.definition.trim() === \"\" ? false : true;\r\n        copyOfResults[boxId] = copyOfBox;\r\n        const totalValidation = this.overallValidityCheck(copyOfResults);\r\n        this.setState({\r\n            results: copyOfResults,\r\n            overAllValid: totalValidation,\r\n        });\r\n    };\r\n\r\n    vocabHandler = (e) => {\r\n        let copyOfResults = [...this.state.results];\r\n        const wordValidation = e.target.value.trim() === \"\" ? false : true;\r\n        let totalValidation = this.overallValidityCheck(copyOfResults, wordValidation);\r\n        totalValidation = totalValidation && wordValidation;\r\n        this.setState({\r\n            word: e.target.value,\r\n            wordIsTouched: true,\r\n            wordIsValid: wordValidation,\r\n            overAllValid: totalValidation,\r\n        });\r\n    };\r\n\r\n    overallValidityCheck = (copyOfResults, wordValidation) => {\r\n        let valid = true;\r\n        if (wordValidation) {\r\n            valid = valid && wordValidation;\r\n        } else {\r\n            valid = valid && this.state.wordIsValid;\r\n        }\r\n\r\n        copyOfResults.forEach((item) => {\r\n            if (item.definitionIsValid === false) {\r\n                valid = false;\r\n            }\r\n            item.examples.forEach((item) => {\r\n                if (item.isValid === false) {\r\n                    valid = false;\r\n                }\r\n            });\r\n        });\r\n        return valid;\r\n    };\r\n\r\n    sendDataHandler = (e) => {\r\n        e.preventDefault();\r\n        let copyOfResults = [...this.state.results];\r\n        copyOfResults.forEach((item) => {\r\n            item.definitionsOverAllSend = true;\r\n            item.examples.forEach((item) => {\r\n                item.exampleOverAllSend = true;\r\n            });\r\n        });\r\n        this.setState({\r\n            loading: true,\r\n            overAllSend: false,\r\n            results: copyOfResults,\r\n            error: null,\r\n            formOverAllSend: false,\r\n            wordOverAllSend: false,\r\n        });\r\n\r\n        let completeData = {\r\n            word: this.state.word,\r\n            userId: this.props.userId,\r\n        };\r\n        const data = this.state.results.map((item) => {\r\n            return {\r\n                definition: item.definition,\r\n                examples: item.examples,\r\n                partOfSpeech: item.partOfSpeech,\r\n            };\r\n        });\r\n\r\n        completeData.results = data;\r\n\r\n        if (this.state.overAllValid) {\r\n            axios\r\n                .post(\r\n                    `https://dictionary-react.firebaseio.com/${this.props.userId}.json?auth=${this.props.token}`,\r\n                    completeData\r\n                )\r\n                .then(() => {\r\n                    let copyOfResults = [...this.state.results];\r\n                    copyOfResults.splice(1, copyOfResults.length - 1);\r\n                    copyOfResults[copyOfResults.length - 1].isLast = true;\r\n                    copyOfResults[copyOfResults.length - 1].examples.splice(\r\n                        0,\r\n                        copyOfResults[copyOfResults.length - 1].examples.length\r\n                    );\r\n                    copyOfResults[0].definition = \"\";\r\n                    copyOfResults[0].definitionIsValid = false;\r\n                    copyOfResults[0].definitionIsTouched = false;\r\n                    copyOfResults[0].definitionsOverAllSend = false;\r\n                    this.setState({\r\n                        loading: false,\r\n                        word: \"\",\r\n                        results: copyOfResults,\r\n                        wordIsValid: false,\r\n                        wordIsTouched: false,\r\n                        overAllValid: false,\r\n                        wordOverAllSend: false,\r\n                        successfulSent: true,\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    err.response\r\n                        ? this.setState({ error: err.response.data.error, loading: false })\r\n                        : this.setState({ error: err.message, loading: false });\r\n                });\r\n        } else {\r\n            let copyOfResults = [...this.state.results];\r\n            copyOfResults.forEach((item) => {\r\n                item.definitionsOverAllSend = true;\r\n                item.examples.forEach((item) => {\r\n                    item.exampleOverAllSend = true;\r\n                });\r\n            });\r\n            this.setState({\r\n                loading: false,\r\n                wordOverAllSend: true,\r\n                results: copyOfResults,\r\n                formOverAllSend: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let boxes = [];\r\n        boxes = this.state.results.map((item, boxId) => {\r\n            return (\r\n                <Box\r\n                    key={boxId}\r\n                    boxId={boxId}\r\n                    definitionIsValid={item.definitionIsValid}\r\n                    definitionIsTouched={item.definitionIsTouched}\r\n                    definitionOverAllSend={item.definitionsOverAllSend}\r\n                    overAllValid={this.state.overAllValid}\r\n                    examples={item.examples}\r\n                    addSentence={this.addExampleHandler}\r\n                    labelType={item.partOfSpeech}\r\n                    isLast={item.isLast}\r\n                    deleteExample={(exampleId) => this.deleteExampleHandler(exampleId, boxId)}\r\n                    deleteBox={this.deleteBoxHandler}\r\n                    addBox={this.addBoxHandler}\r\n                    numOfBoxes={this.state.results.length}\r\n                    partOfSpeech={item.partOfSpeech}\r\n                    definitionValue={item.definition}\r\n                    valueOfExample={item.examples}\r\n                    onChangeOfExapleValue={(e, exampleId) =>\r\n                        this.valueOfExampleHandler(e, exampleId, boxId)\r\n                    }\r\n                    onChangeTypeOfVocab={this.typeOfVocabHandler}\r\n                    onChangeOfDefinitionValue={this.valueOfDefinitionHandler}\r\n                    overAllSend={this.state.overAllSend}\r\n                />\r\n            );\r\n        });\r\n\r\n        let errorMessage = this.state.formOverAllSend ? (\r\n            <p className={classes.EmptyMessage}>fill empty inputs</p>\r\n        ) : this.state.error ? (\r\n            <p className={classes.EmptyMessage}>{this.state.error}</p>\r\n        ) : null;\r\n\r\n        let succfSnt = this.state.successfulSent ? (\r\n            <p\r\n                style={{\r\n                    color: \"white\",\r\n                    backgroundColor: \"green\",\r\n                    padding: \"10px\",\r\n                    width: \"200px\",\r\n                    margin: \"20px auto\",\r\n                    borderRadius: \"10px\",\r\n                }}\r\n                className={classes.EmptyMessage}\r\n            >\r\n                successfully sent!\r\n            </p>\r\n        ) : null;\r\n\r\n        return (\r\n            <Aux>\r\n                <form>\r\n                    <div className={classes.InputContainer}>\r\n                        <Label additionClass=\"Align\">word:</Label>\r\n                        <TextInput\r\n                            wordIsTouched={this.state.wordIsTouched}\r\n                            wordIsValid={this.state.wordIsValid}\r\n                            onChangeOfTextInput={this.vocabHandler}\r\n                            placeholder=\"Enter Word...\"\r\n                            textInputValue={this.state.word}\r\n                            overAllValid={this.state.overAllValid}\r\n                            wordOverAllSend={this.state.wordOverAllSend}\r\n                            typeOfInput=\"text\"\r\n                        />\r\n                    </div>\r\n\r\n                    {boxes}\r\n                </form>\r\n                <div className={classes.ButtonDiv}>\r\n                    <button className={classes.Button} onClick={this.sendDataHandler}>\r\n                        <span>submit form</span>\r\n                        {this.state.loading ? <Spinner /> : null}\r\n                    </button>\r\n                </div>\r\n                {errorMessage}\r\n                {succfSnt}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.userId,\r\n        token: state.token,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Form);\r\n","import React from \"react\";\r\nimport classes from \"./formBuilder.module.css\";\r\nimport Form from \"../Form/Form\";\r\n\r\nclass FormBuilder extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.FormBuilder}>\r\n                <Form />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormBuilder;\r\n","import React, { useEffect, Fragment, useReducer } from \"react\";\r\nimport classes from \"./findedVocabs.module.css\";\r\n// import withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\n// import Axios from \"axios\";\r\nconst ACTION = {\r\n    Set_Error_Message: \"setErrorMessage\",\r\n    Set_Loading_Status: \"setLoadingStatus\",\r\n    Set_Not_Found: \"setNotFound\",\r\n    Set_Enter_Something: \"setEnterSomething\",\r\n    Set_Vocab_Definitions_1: \"setVocabDefinitions1\",\r\n    Set_Vocab_Definitions_2: \"setVocabDefinitions2\",\r\n};\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ACTION.Set_Error_Message:\r\n            return {\r\n                vocabDefinitions: [],\r\n                notFound: false,\r\n                enterSomeThing: false,\r\n                error: action.payload.errorMeesage,\r\n                loading: false,\r\n            };\r\n        case ACTION.Set_Loading_Status:\r\n            return {\r\n                vocabDefinitions: [],\r\n                notFound: false,\r\n                enterSomeThing: false,\r\n                error: false,\r\n                loading: true,\r\n            };\r\n        case ACTION.Set_Not_Found:\r\n            return {\r\n                vocabDefinitions: [],\r\n                notFound: true,\r\n                enterSomeThing: false,\r\n                error: false,\r\n                loading: false,\r\n            };\r\n        case ACTION.Set_Enter_Something:\r\n            return {\r\n                vocabDefinitions: [],\r\n                notFound: false,\r\n                enterSomeThing: true,\r\n                error: false,\r\n                loading: false,\r\n            };\r\n        case ACTION.Set_Vocab_Definitions_1:\r\n            return {\r\n                vocabDefinitions: [],\r\n                notFound: false,\r\n                enterSomeThing: false,\r\n                error: false,\r\n                loading: false,\r\n            };\r\n        case ACTION.Set_Vocab_Definitions_2:\r\n            return {\r\n                vocabDefinitions: [...action.payload.data],\r\n                notFound: false,\r\n                enterSomeThing: false,\r\n                error: false,\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst FindedVocabs = (props) => {\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        vocabDefinitions: [],\r\n        notFound: false,\r\n        enterSomeThing: false,\r\n        error: false,\r\n        loading: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        let result = [];\r\n        if (props.errorMessage) {\r\n            dispatch({\r\n                type: ACTION.Set_Error_Message,\r\n                payload: { errorMeesage: props.errorMessage },\r\n            });\r\n        } else if (props.loadingStatus) {\r\n            dispatch({ type: ACTION.Set_Loading_Status });\r\n        } else if (\r\n            Object.keys(props.searchResponse).length === 0 &&\r\n            props.Touched &&\r\n            props.filled.length > 0\r\n        ) {\r\n            dispatch({ type: ACTION.Set_Not_Found });\r\n        } else if (props.filled.length === 0) {\r\n            dispatch({ type: ACTION.Set_Enter_Something });\r\n        } else if (Object.keys(props.searchResponse).length > 0) {\r\n            dispatch({ type: ACTION.Set_Vocab_Definitions_1 });\r\n\r\n            for (let id in props.searchResponse) {\r\n                const word = props.searchResponse[id].word;\r\n                const def = props.searchResponse[id].results.map((item, id) => {\r\n                    return (\r\n                        <Fragment key={id}>\r\n                            <div className={classes.YellowLine}></div>\r\n                            <span className={classes.WordType}>{item.partOfSpeech}</span>\r\n                            <p className={classes.Definition}>{item.definition}</p>\r\n                            {item.examples &&\r\n                                item.examples.map((item, id) => {\r\n                                    return (\r\n                                        <p className={classes.Example} key={id}>\r\n                                            -{item.expValue}\r\n                                        </p>\r\n                                    );\r\n                                })}\r\n                        </Fragment>\r\n                    );\r\n                });\r\n                result.push(\r\n                    <div className={classes.Wrapper} key={id}>\r\n                        <h3 className={classes.MainVocab}>{word}</h3>\r\n                        {def}\r\n                    </div>\r\n                );\r\n                dispatch({ type: ACTION.Set_Vocab_Definitions_2, payload: { data: result } });\r\n            }\r\n        }\r\n    }, [\r\n        props.searchResponse,\r\n        props.filled,\r\n        props.Touched,\r\n        props.errorMessage,\r\n        props.loading,\r\n        props.loadingStatus,\r\n    ]);\r\n\r\n    let vocabFindedBox = null;\r\n    if (state.enterSomeThing) {\r\n        vocabFindedBox = <p className={classes.NotFound}>enter what you want</p>;\r\n    } else if (state.notFound) {\r\n        vocabFindedBox = <p className={classes.NotFound}>Vocab Not Found</p>;\r\n    } else if (state.error) {\r\n        vocabFindedBox = <p className={classes.NotFound}>{props.errorMessage}</p>;\r\n    } else if (state.loading) {\r\n        vocabFindedBox = null;\r\n    } else {\r\n        vocabFindedBox = state.vocabDefinitions;\r\n    }\r\n\r\n    return vocabFindedBox;\r\n};\r\n\r\nexport default FindedVocabs;\r\n","import React, { useState, useEffect, useRef, Fragment } from \"react\";\r\nimport TextInput from \"../../components/UI/Input/textInput/textInput\";\r\nimport FindedVocabs from \"../../components/findedVocabs/findedVocabs\";\r\nimport Spinner from \"../../components/UI/spinner/spinner\";\r\nimport classes from \"./search.module.css\";\r\n// import withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nconst Search = (props) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [response, setResponse] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [inputTouched, setInputTouched] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const inputValueRef = useRef();\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (\r\n                searchValue === inputValueRef.current.value &&\r\n                inputValueRef.current.value.trim() !== \"\"\r\n            ) {\r\n                setLoading(true);\r\n                setError(false);\r\n                let query =\r\n                    searchValue.length === 0\r\n                        ? \"\"\r\n                        : \"?auth=\" + props.token + '&orderBy=\"word\"&equalTo=\"' + searchValue + '\"';\r\n\r\n                Axios.get(`https://dictionary-react.firebaseio.com/${props.userId}.json` + query)\r\n                    .then((res) => {\r\n                        setLoading(false);\r\n                        setResponse(res.data);\r\n                        setInputTouched(true);\r\n                    })\r\n                    .catch((err) => {\r\n                        setLoading(false);\r\n                        setError(err.message);\r\n                    });\r\n\r\n                // fetch(`https://dictionary-react.firebaseio.com/${props.userId}.json` + query, {\r\n                //     method: \"GET\",\r\n                //     headers: {\r\n                //         \"Content-Type\": \"application/json\",\r\n                //     },\r\n                // })\r\n                //     .then((response) => {\r\n                //         return response.json();\r\n                //     })\r\n                //     .then((res) => {\r\n                //         console.log(res);\r\n                //         setLoading(false);\r\n                //         setResponse(res);\r\n                //         setInputTouched(true);\r\n                //     })\r\n                //     .catch((err) => {\r\n                //         console.log(err);\r\n                //         setLoading(false);\r\n                //         setError(err.message);\r\n                //     });\r\n            }\r\n        }, 500);\r\n        return () => {\r\n            clearTimeout(timer);\r\n        };\r\n    }, [searchValue, inputValueRef, props.token, props.userId]);\r\n    useEffect(() => {\r\n        if (searchValue.length === 0) {\r\n            setInputTouched(false);\r\n        }\r\n    }, [searchValue.length]);\r\n\r\n    const inputChangeHandler = (e) => {\r\n        setSearchValue(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.InputWrapper}>\r\n                <TextInput\r\n                    inputValueRef={inputValueRef}\r\n                    inputType=\"text-input\"\r\n                    placeholder=\"Search\"\r\n                    onChangeOfTextInput={(e) => inputChangeHandler(e)}\r\n                    textInputValue={searchValue}\r\n                />\r\n                <div className={classes.SpinnerWrapper}>{loading ? <Spinner /> : null}</div>\r\n            </div>\r\n\r\n            <FindedVocabs\r\n                searchResponse={response}\r\n                Touched={inputTouched}\r\n                filled={searchValue}\r\n                errorMessage={error}\r\n                loadingStatus={loading}\r\n            />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.token,\r\n        userId: state.userId,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Search);\r\n//(withErrorHandler(Search, Axios))\r\n","import * as actionType from \"./actionTypes\";\r\nimport Axios from \"axios\";\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionType.AUTH_START,\r\n    };\r\n};\r\n\r\nexport const authFailLogin = (error) => {\r\n    return {\r\n        type: actionType.AUTH_FAIL_LOGIN,\r\n        error: error,\r\n    };\r\n};\r\nexport const authFailSignup = (error) => {\r\n    return {\r\n        type: actionType.AUTH_FAIL_SIGNUP,\r\n        errorSignup: error,\r\n    };\r\n};\r\nexport const signupErrorClose = () => {\r\n    return {\r\n        type: actionType.SIGNUP_ERROR_CLOSE,\r\n    };\r\n};\r\n\r\nexport const loginErrorClose = () => {\r\n    return {\r\n        type: actionType.LOGIN_ERROR_CLOSE,\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionType.AUTH_SUCCESS,\r\n        userId: userId,\r\n        idToken: token,\r\n    };\r\n};\r\nexport const logOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"expireDate\");\r\n    return {\r\n        type: actionType.AUTH_LOGOUT,\r\n    };\r\n};\r\nexport const checkAuthTimeOut = (expiresIn) => {\r\n    return (dispatch) => {\r\n        setTimeout(() => {\r\n            dispatch(logOut());\r\n        }, expiresIn * 1000);\r\n    };\r\n};\r\nexport const redirect = () => {\r\n    return {\r\n        type: actionType.REDIRECT,\r\n        path: \"/EnterByMe\",\r\n    };\r\n};\r\n\r\nexport const verification = (token) => {\r\n    return (dispatch) => {\r\n        let url =\r\n            \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyAGPZqC46mQtp3HeMO7K0QjtqfSAyaEAiM\";\r\n        Axios.post(url, {\r\n            requestType: \"VERIFY_EMAIL\",\r\n            idToken: token,\r\n        })\r\n            .then((res) => {})\r\n            .catch((err) => {});\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, type) => {\r\n    return (dispatch) => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true,\r\n        };\r\n        let url;\r\n        if (type === \"signup\") {\r\n            url =\r\n                \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAGPZqC46mQtp3HeMO7K0QjtqfSAyaEAiM\";\r\n        } else {\r\n            url =\r\n                \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAGPZqC46mQtp3HeMO7K0QjtqfSAyaEAiM\";\r\n        }\r\n\r\n        Axios.post(url, authData)\r\n            .then((response) => {\r\n                const expireDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem(\"token\", response.data.idToken);\r\n                localStorage.setItem(\"userId\", response.data.localId);\r\n                localStorage.setItem(\"expireDate\", expireDate);\r\n                if (type === \"signup\") {\r\n                    dispatch(verification(response.data.idToken));\r\n                }\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeOut(response.data.expiresIn));\r\n                dispatch(redirect());\r\n            })\r\n            .catch((err) => {\r\n                if (type === \"signup\") {\r\n                    err.response\r\n                        ? dispatch(authFailSignup(err.response.data.error.message))\r\n                        : dispatch(authFailSignup(err.message));\r\n                } else {\r\n                    err.response\r\n                        ? dispatch(authFailLogin(err.response.data.error.message))\r\n                        : dispatch(authFailLogin(err.message));\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const authStateCheck = () => {\r\n    return (dispatch) => {\r\n        const token = localStorage.getItem(\"token\");\r\n        const userId = localStorage.getItem(\"userId\");\r\n        if (!token) {\r\n            dispatch(logOut());\r\n        } else {\r\n            const expireDate = new Date(localStorage.getItem(\"expireDate\"));\r\n\r\n            if (expireDate > new Date()) {\r\n                dispatch(authSuccess(token, userId));\r\n                const expireTime = (expireDate.getTime() - new Date().getTime()) / 1000;\r\n                dispatch(checkAuthTimeOut(expireTime));\r\n            } else {\r\n                dispatch(logOut());\r\n            }\r\n        }\r\n    };\r\n};\r\n","export const AUTH_SUCCESS = \"authSuccess\";\r\nexport const AUTH_FAIL_LOGIN = \"authFailLogin\";\r\nexport const LOGIN_ERROR_CLOSE = \"loginErrorClose\";\r\n\r\nexport const AUTH_FAIL_SIGNUP = \"authFailSignup\";\r\nexport const SIGNUP_ERROR_CLOSE = \"signUpErrorClose\";\r\n\r\nexport const AUTH_START = \"authStart\";\r\nexport const AUTH_LOGOUT = \"authLogOut\";\r\nexport const REDIRECT = \"redirect\";\r\n","import React from \"react\";\r\nimport classes from \"./register.module.css\";\r\n\r\nconst Register = (props) => {\r\n    return (\r\n        <div className={classes.Back}>\r\n            <div className={classes.LogInHolder}>{props.children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TextInput from \"../../components/UI/Input/textInput/textInput\";\r\nimport classes from \"./login.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { auth, signupErrorClose } from \"../../store/actionCreators\";\r\nimport Spinner from \"../../components/UI/spinner/spinner\";\r\nimport Register from \"./register/register\";\r\nimport { Link } from \"react-router-dom\";\r\nimport tick from \"../../svg/tick1.svg\";\r\nimport cross from \"../../svg/close-black.svg\";\r\nconst SignUp = (props) => {\r\n    const [emailValue, setEmailValue] = useState(\"\");\r\n    const [passValue1, setPassValue1] = useState(\"\");\r\n    const [passValue2, setPassValue2] = useState(\"\");\r\n    const [pass1Touched, setPass1Touched] = useState(false);\r\n    const [pass2Touched, setPass2Touched] = useState(false);\r\n    const [isValid, setIsValid] = useState(false);\r\n    const [passShort, checkPassShort] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let checkValidity = true;\r\n        if (passValue1.trim() !== passValue2.trim()) {\r\n            setIsValid(false);\r\n        }\r\n        if (passValue1 === passValue2 && passValue1.trim() !== \"\" && passValue2.trim() !== \"\") {\r\n            if (passValue1.length < 7) {\r\n                setIsValid(false);\r\n                checkPassShort(true);\r\n            } else {\r\n                setIsValid(true);\r\n                checkPassShort(false);\r\n            }\r\n        }\r\n    }, [pass1Touched, passValue1, passValue2]);\r\n\r\n    function onChangeOfPass1(value) {\r\n        setPassValue1(value);\r\n        setPass1Touched(true);\r\n    }\r\n    function onChangeOfPass2(value) {\r\n        setPassValue2(value);\r\n        setPass2Touched(true);\r\n    }\r\n\r\n    const submitAuth = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isValid) {\r\n            props.onAuth(emailValue, passValue2);\r\n        }\r\n    };\r\n    let authRedirect = null;\r\n    if (props.isAuth) {\r\n        authRedirect = <Redirect to=\"/EnterByMe\" />;\r\n    }\r\n    return (\r\n        <Register>\r\n            <div className={classes.AuthContainer}>\r\n                {authRedirect}\r\n                <h1 className={classes.Header}>create account</h1>\r\n                <form onSubmit={submitAuth}>\r\n                    <div className={classes.Input}>\r\n                        <label>Email:</label>\r\n                        <TextInput\r\n                            placeholder=\"Email\"\r\n                            onChangeOfTextInput={(e) => setEmailValue(e.target.value)}\r\n                            textInputValue={emailValue}\r\n                            typeOfInput=\"email\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={classes.Input}>\r\n                        <label>Password:</label>\r\n                        <TextInput\r\n                            placeholder=\"PassWord\"\r\n                            onChangeOfTextInput={(e) => onChangeOfPass1(e.target.value)}\r\n                            textInputValue={passValue1}\r\n                            typeOfInput=\"password\"\r\n                            wordIsValid={!passShort}\r\n                            wordIsTouched={pass1Touched}\r\n                        />\r\n                        {passShort ? (\r\n                            <div\r\n                                style={{\r\n                                    color: \"red\",\r\n                                    textTransform: \"capitalize\",\r\n                                    fontWeight: \"200\",\r\n                                    marginTop: \"10px\",\r\n                                }}\r\n                            >\r\n                                password must at least 7 characters\r\n                            </div>\r\n                        ) : null}\r\n                        {/* <img className={classes.Tick} src={tick} /> */}\r\n                    </div>\r\n                    <div className={classes.Input}>\r\n                        <label>Rewrite Password:</label>\r\n                        <TextInput\r\n                            placeholder=\"Rewrite PassWord\"\r\n                            onChangeOfTextInput={(e) => onChangeOfPass2(e.target.value)}\r\n                            textInputValue={passValue2}\r\n                            wordIsTouched={pass2Touched}\r\n                            wordIsValid={isValid}\r\n                            typeOfInput=\"password\"\r\n                        />\r\n\r\n                        {isValid ? <img className={classes.Tick} src={tick} /> : null}\r\n                    </div>\r\n\r\n                    <button className={classes.SubmitButton}>\r\n                        <span>SignUp</span>\r\n                        {props.loading ? <Spinner /> : null}\r\n                    </button>\r\n                    <p className={classes.CreateAccount}>\r\n                        <span>you have account?</span>\r\n                        {<Link to=\"/\">log in</Link>}\r\n                    </p>\r\n                    {props.errorSignup ? (\r\n                        <div className={classes.ErrorMessage}>\r\n                            <img\r\n                                onClick={props.onCloseError}\r\n                                className={classes.crossClose}\r\n                                src={cross}\r\n                            />\r\n                            {props.errorSignup}\r\n                        </div>\r\n                    ) : null}\r\n                </form>\r\n            </div>\r\n        </Register>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProp = (dispatch) => {\r\n    return {\r\n        onAuth: (emailValue, passwordValue) => dispatch(auth(emailValue, passwordValue, \"signup\")),\r\n        onCloseError: () => dispatch(signupErrorClose()),\r\n    };\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        errorSignup: state.errorSignup,\r\n        isAuth: state.token !== null,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProp)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logOut } from \"../../store/actionCreators\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.logout();\r\n    }\r\n    render() {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => dispatch(logOut()),\r\n    };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { useState } from \"react\";\r\n\r\nimport TextInput from \"../../components/UI/Input/textInput/textInput\";\r\nimport classes from \"./login.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { auth, loginErrorClose } from \"../../store/actionCreators\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../../components/UI/spinner/spinner\";\r\nimport Register from \"./register/register\";\r\nimport cross from \"../../svg/close-black.svg\";\r\n\r\nconst Auth = (props) => {\r\n    const [emailValue, setEmailValue] = useState(\"\");\r\n    const [passwordValue, setPasswordValue] = useState(\"\");\r\n    const submitAuth = (e) => {\r\n        e.preventDefault();\r\n        props.onAuth(emailValue, passwordValue);\r\n    };\r\n    let authRedirect = null;\r\n    if (props.isAuth) {\r\n        authRedirect = <Redirect to=\"/EnterByMe\" />;\r\n    }\r\n    return (\r\n        <Register>\r\n            <div className={classes.AuthContainer}>\r\n                {authRedirect}\r\n                <h1 className={classes.Header}>log in</h1>\r\n                <form onSubmit={submitAuth}>\r\n                    <TextInput\r\n                        placeholder=\"Email\"\r\n                        onChangeOfTextInput={(e) => setEmailValue(e.target.value)}\r\n                        textInputValue={emailValue}\r\n                    />\r\n                    <TextInput\r\n                        placeholder=\"PassWord\"\r\n                        onChangeOfTextInput={(e) => setPasswordValue(e.target.value)}\r\n                        textInputValue={passwordValue}\r\n                        typeOfInput=\"password\"\r\n                    />\r\n                    <button className={classes.SubmitButton}>\r\n                        <span>login</span>\r\n                        {props.loading ? <Spinner /> : null}\r\n                    </button>\r\n\r\n                    <p className={classes.CreateAccount}>\r\n                        <span>you don't have an account?</span>\r\n                        {<Link to=\"/signup\">sign up</Link>}\r\n                    </p>\r\n\r\n                    {props.errorLogin ? (\r\n                        <div className={classes.ErrorMessage}>\r\n                            <img\r\n                                onClick={props.onCloseError}\r\n                                className={classes.crossClose}\r\n                                src={cross}\r\n                            />\r\n                            {props.errorLogin}\r\n                        </div>\r\n                    ) : null}\r\n                </form>\r\n            </div>\r\n        </Register>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProp = (dispatch) => {\r\n    return {\r\n        onAuth: (emailValue, passwordValue) => dispatch(auth(emailValue, passwordValue)),\r\n        onCloseError: () => dispatch(loginErrorClose()),\r\n    };\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        errorLogin: state.errorLogin,\r\n        isAuth: state.token !== null,\r\n        redirectPath: state.redirect,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(Auth);\r\n","import React, { useEffect } from \"react\";\nimport Layout from \"./components/Layout/Layout\";\nimport FormBuilder from \"./containers/formBuilder/formBuilder\";\nimport Search from \"./containers/search/search\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport SignUp from \"./containers/auth/signup\";\nimport Logout from \"./containers/auth/logout\";\nimport Login from \"./containers/auth/login\";\nimport { connect } from \"react-redux\";\nimport { authStateCheck } from \"./store/actionCreators\";\n\nfunction App(props) {\n    const { checkAuth, isAuth } = props;\n    useEffect(() => {\n        checkAuth();\n    }, [checkAuth]);\n    let route = (\n        <Switch>\n            <Route path=\"/signup\" exact component={SignUp} />\n            <Route path=\"/\" exact component={Login} />\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n\n    if (isAuth) {\n        route = (\n            <Switch>\n                <Route path=\"/search\" exact component={Search} />\n                <Route path=\"/EnterByMe\" exact component={FormBuilder} />\n                <Route path=\"/logout\" exact component={Logout} />\n                <Redirect to=\"/EnterByMe\" />\n            </Switch>\n        );\n    }\n    return <Layout>{route}</Layout>;\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        checkAuth: () => dispatch(authStateCheck()),\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.token !== null,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import * as actionType from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    token: null,\r\n    loading: false,\r\n    errorLogin: null,\r\n    errorSignup: null,\r\n    redirect: \"/\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.AUTH_START: {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null,\r\n            };\r\n        }\r\n        case actionType.AUTH_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                userId: action.userId,\r\n                token: action.idToken,\r\n                errorLogin: null,\r\n                errorSignup: null,\r\n            };\r\n        }\r\n        case actionType.AUTH_FAIL_LOGIN: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorLogin: action.error,\r\n            };\r\n        }\r\n        case actionType.AUTH_FAIL_SIGNUP: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorSignup: action.errorSignup,\r\n            };\r\n        }\r\n\r\n        case actionType.SIGNUP_ERROR_CLOSE: {\r\n            return {\r\n                ...state,\r\n                errorSignup: null,\r\n            };\r\n        }\r\n        case actionType.LOGIN_ERROR_CLOSE: {\r\n            return {\r\n                ...state,\r\n                errorLogin: null,\r\n            };\r\n        }\r\n        case actionType.AUTH_LOGOUT: {\r\n            return {\r\n                ...state,\r\n                userId: null,\r\n                token: null,\r\n            };\r\n        }\r\n        case actionType.REDIRECT: {\r\n            return {\r\n                ...state,\r\n                redirect: action.path,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./store/reducer\";\nimport { Provider } from \"react-redux\";\nconst composeEnahncer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnahncer(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}